--[[

Safe Interface Module
by: Elec. | 1294344374859202677

Build Version: 2.0.0 EXTREME EDITION
Release: SUPER PRODUCTION Build 2.0

]]--

local InterfaceBuild = '2.0.0';
local Release = "SUPER PRODUCTION Build 2.0";

-- // Constants \\ --
local TWEEN_INFO = TweenInfo.new(0.15, Enum.EasingStyle.Quad, Enum.EasingDirection.Out);
local DRAG_SPEED = 0.12;
local RAINBOW_SPEED = 2;
local GLOW_INTENSITY = 0.8;
local SHADOW_TRANSPARENCY = 0.7;
local BLUR_SIZE = 15;
local ANIMATION_SPEED = 0.3;

local SafeModule = {
	Flags = {};
	Theme = {
		Default = {
			TextColor = Color3.fromRGB(0, 0, 0);
			Background = Color3.fromRGB(236, 236, 236);
			ElementBackground = Color3.fromRGB(255, 255, 255);
			ElementStroke = Color3.fromRGB(200, 200, 200);
			ButtonColor = Color3.fromRGB(0, 122, 255);
			ButtonHover = Color3.fromRGB(0, 102, 235);
			SliderColor = Color3.fromRGB(0, 122, 255);
			SliderFill = Color3.fromRGB(0, 102, 235);
			ToggleOff = Color3.fromRGB(200, 200, 200);
			ToggleOn = Color3.fromRGB(0, 122, 255);
			DropdownBackground = Color3.fromRGB(245, 245, 245);
			Glow = Color3.fromRGB(0, 122, 255);
			Shadow = Color3.fromRGB(0, 0, 0);
			Accent = Color3.fromRGB(0, 122, 255);
			Success = Color3.fromRGB(39, 201, 63);
			Warning = Color3.fromRGB(255, 189, 46);
			Error = Color3.fromRGB(255, 95, 87);
		};
		Dark = {
			TextColor = Color3.fromRGB(255, 255, 255);
			Background = Color3.fromRGB(30, 30, 30);
			ElementBackground = Color3.fromRGB(40, 40, 40);
			ElementStroke = Color3.fromRGB(60, 60, 60);
			ButtonColor = Color3.fromRGB(0, 122, 255);
			ButtonHover = Color3.fromRGB(0, 102, 235);
			SliderColor = Color3.fromRGB(0, 122, 255);
			SliderFill = Color3.fromRGB(0, 102, 235);
			ToggleOff = Color3.fromRGB(60, 60, 60);
			ToggleOn = Color3.fromRGB(0, 122, 255);
			DropdownBackground = Color3.fromRGB(35, 35, 35);
			Glow = Color3.fromRGB(0, 122, 255);
			Shadow = Color3.fromRGB(0, 0, 0);
			Accent = Color3.fromRGB(0, 122, 255);
			Success = Color3.fromRGB(39, 201, 63);
			Warning = Color3.fromRGB(255, 189, 46);
			Error = Color3.fromRGB(255, 95, 87);
		};
	};
	_initialized = false;
	_keySystemPassed = false;
	_currentTheme = "Default";
	_commands = {};
};

-- // Services \\ --
local TweenService = game:GetService("TweenService");
local RunService = game:GetService("RunService");
local Players = game:GetService("Players");
local UserInputService = game:GetService("UserInputService");
local Lighting = game:GetService("Lighting");
local CoreGui = game:GetService("CoreGui");

-- // Interface Creation \\ -- 
local Interface = Instance.new("ScreenGui");
Interface.Name = "SafeInterface_EXTREME";
Interface.ResetOnSpawn = false;
Interface.ZIndexBehavior = Enum.ZIndexBehavior.Sibling;

local BlurEffect = Instance.new("BlurEffect");
BlurEffect.Size = BLUR_SIZE;
BlurEffect.Parent = Lighting;

local KeySystem = Instance.new("Frame");
KeySystem.Name = "KeySystem";
KeySystem.Size = UDim2.new(0, 300, 0, 150);
KeySystem.Position = UDim2.new(0.5, -150, 0.5, -75);
KeySystem.BackgroundColor3 = SafeModule.Theme.Default.Background;
KeySystem.Visible = false;
KeySystem.Parent = Interface;

-- Add shadow effect
local KeyShadow = Instance.new("ImageLabel");
KeyShadow.Name = "Shadow";
KeyShadow.AnchorPoint = Vector2.new(0.5, 0.5);
KeyShadow.BackgroundTransparency = 1;
KeyShadow.Position = UDim2.new(0.5, 0, 0.5, 0);
KeyShadow.Size = UDim2.new(1, 30, 1, 30);
KeyShadow.ZIndex = -1;
KeyShadow.Image = "rbxassetid://5554236805";
KeyShadow.ImageColor3 = SafeModule.Theme.Default.Shadow;
KeyShadow.ImageTransparency = SHADOW_TRANSPARENCY;
KeyShadow.ScaleType = Enum.ScaleType.Slice;
KeyShadow.SliceCenter = Rect.new(23, 23, 277, 277);
KeyShadow.Parent = KeySystem;

local UICornerKey = Instance.new("UICorner");
UICornerKey.CornerRadius = UDim.new(0, 10);
UICornerKey.Parent = KeySystem;

local KeyTitle = Instance.new("TextLabel");
KeyTitle.Name = "Title";
KeyTitle.Size = UDim2.new(1, 0, 0, 30);
KeyTitle.BackgroundTransparency = 1;
KeyTitle.TextColor3 = SafeModule.Theme.Default.TextColor;
KeyTitle.Text = "Enter Key";
KeyTitle.TextSize = 18;
KeyTitle.Font = Enum.Font.GothamBold;
KeyTitle.Parent = KeySystem;

local KeyInput = Instance.new("TextBox");
KeyInput.Size = UDim2.new(0.8, 0, 0, 35);
KeyInput.Position = UDim2.new(0.1, 0, 0.3, 0);
KeyInput.BackgroundColor3 = SafeModule.Theme.Default.ElementBackground;
KeyInput.TextColor3 = SafeModule.Theme.Default.TextColor;
KeyInput.PlaceholderText = "Enter key here...";
KeyInput.TextSize = 14;
KeyInput.Font = Enum.Font.Gotham;
KeyInput.Parent = KeySystem;
KeyInput.ClearTextOnFocus = false;

-- Add glow effect
local KeyGlow = Instance.new("ImageLabel");
KeyGlow.Name = "Glow";
KeyGlow.BackgroundTransparency = 1;
KeyGlow.Position = UDim2.new(0, -15, 0, -15);
KeyGlow.Size = UDim2.new(1, 30, 1, 30);
KeyGlow.ZIndex = -1;
KeyGlow.Image = "rbxassetid://5554236805";
KeyGlow.ImageColor3 = SafeModule.Theme.Default.Glow;
KeyGlow.ImageTransparency = 1 - GLOW_INTENSITY;
KeyGlow.Parent = KeyInput;

local UICornerInput = Instance.new("UICorner");
UICornerInput.CornerRadius = UDim.new(0, 6);
UICornerInput.Parent = KeyInput;

local SubmitButton = Instance.new("TextButton");
SubmitButton.Size = UDim2.new(0.8, 0, 0, 35);
SubmitButton.Position = UDim2.new(0.1, 0, 0.65, 0);
SubmitButton.BackgroundColor3 = SafeModule.Theme.Default.ButtonColor;
SubmitButton.TextColor3 = Color3.fromRGB(255, 255, 255);
SubmitButton.Text = "Submit";
SubmitButton.TextSize = 14;
SubmitButton.Font = Enum.Font.GothamBold;
SubmitButton.Parent = KeySystem;
SubmitButton.AutoButtonColor = false;

-- Add hover animation
local SubmitGlow = Instance.new("ImageLabel");
SubmitGlow.Name = "Glow";
SubmitGlow.BackgroundTransparency = 1;
SubmitGlow.Position = UDim2.new(0, -15, 0, -15);
SubmitGlow.Size = UDim2.new(1, 30, 1, 30);
SubmitGlow.ZIndex = -1;
SubmitGlow.Image = "rbxassetid://5554236805";
SubmitGlow.ImageColor3 = SafeModule.Theme.Default.Glow;
SubmitGlow.ImageTransparency = 1;
SubmitGlow.Parent = SubmitButton;

local UICornerSubmit = Instance.new("UICorner");
UICornerSubmit.CornerRadius = UDim.new(0, 6);
UICornerSubmit.Parent = SubmitButton;

local Main = Instance.new("Frame");
Main.Name = "Main";
Main.Size = UDim2.new(0, 450, 0, 350);
Main.Position = UDim2.new(0.5, -225, 0.5, -175);
Main.BackgroundColor3 = SafeModule.Theme.Default.Background;
Main.ClipsDescendants = true;
Main.Visible = false;
Main.Parent = Interface;

-- Add main window shadow
local MainShadow = Instance.new("ImageLabel");
MainShadow.Name = "Shadow";
MainShadow.AnchorPoint = Vector2.new(0.5, 0.5);
MainShadow.BackgroundTransparency = 1;
MainShadow.Position = UDim2.new(0.5, 0, 0.5, 0);
MainShadow.Size = UDim2.new(1, 30, 1, 30);
MainShadow.ZIndex = -1;
MainShadow.Image = "rbxassetid://5554236805";
MainShadow.ImageColor3 = SafeModule.Theme.Default.Shadow;
MainShadow.ImageTransparency = SHADOW_TRANSPARENCY;
MainShadow.ScaleType = Enum.ScaleType.Slice;
MainShadow.SliceCenter = Rect.new(23, 23, 277, 277);
MainShadow.Parent = Main;

local TopBar = Instance.new("Frame");
TopBar.Name = "TopBar";
TopBar.Size = UDim2.new(1, 0, 0, 30);
TopBar.BackgroundColor3 = SafeModule.Theme.Default.ElementBackground;
TopBar.Parent = Main;

local UICornerTopBar = Instance.new("UICorner");
UICornerTopBar.CornerRadius = UDim.new(0, 8);
UICornerTopBar.Parent = TopBar;

local CloseButton = Instance.new("TextButton");
CloseButton.Size = UDim2.new(0, 12, 0, 12);
CloseButton.Position = UDim2.new(0, 10, 0, 9);
CloseButton.BackgroundColor3 = SafeModule.Theme.Default.Error;
CloseButton.Text = "";
CloseButton.Parent = TopBar;

local UICornerClose = Instance.new("UICorner");
UICornerClose.CornerRadius = UDim.new(1, 0);
UICornerClose.Parent = CloseButton;

local MinimizeButton = Instance.new("TextButton");
MinimizeButton.Size = UDim2.new(0, 12, 0, 12);
MinimizeButton.Position = UDim2.new(0, 30, 0, 9);
MinimizeButton.BackgroundColor3 = SafeModule.Theme.Default.Warning;
MinimizeButton.Text = "";
MinimizeButton.Parent = TopBar;

local UICornerMin = Instance.new("UICorner");
UICornerMin.CornerRadius = UDim.new(1, 0);
UICornerMin.Parent = MinimizeButton;

local MaximizeButton = Instance.new("TextButton");
MaximizeButton.Size = UDim2.new(0, 12, 0, 12);
MaximizeButton.Position = UDim2.new(0, 50, 0, 9);
MaximizeButton.BackgroundColor3 = SafeModule.Theme.Default.Success;
MaximizeButton.Text = "";
MaximizeButton.Parent = TopBar;

local UICornerMax = Instance.new("UICorner");
UICornerMax.CornerRadius = UDim.new(1, 0);
UICornerMax.Parent = MaximizeButton;

local UICorner = Instance.new("UICorner");
UICorner.CornerRadius = UDim.new(0, 8);
UICorner.Parent = Main;

local Title = Instance.new("TextLabel");
Title.Name = "Title";
Title.Size = UDim2.new(1, 0, 0, 35);
Title.Position = UDim2.new(0, 0, 0, 35);
Title.BackgroundTransparency = 1;
Title.TextColor3 = SafeModule.Theme.Default.TextColor;
Title.Text = "Safe Interface EXTREME";
Title.TextSize = 22;
Title.Font = Enum.Font.GothamBold;
Title.Parent = Main;

local Subtitle = Instance.new("TextLabel");
Subtitle.Name = "Subtitle";
Subtitle.Size = UDim2.new(1, 0, 0, 20);
Subtitle.Position = UDim2.new(0, 0, 0, 65);
Subtitle.BackgroundTransparency = 1;
Subtitle.TextColor3 = SafeModule.Theme.Default.Accent;
Subtitle.Text = "SUPER EDITION v2.0";
Subtitle.TextSize = 14;
Subtitle.Font = Enum.Font.Gotham;
Subtitle.Parent = Main;

local ElementContainer = Instance.new("ScrollingFrame");
ElementContainer.Name = "Elements";
ElementContainer.Size = UDim2.new(1, -20, 1, -95);
ElementContainer.Position = UDim2.new(0, 10, 0, 90);
ElementContainer.BackgroundTransparency = 1;
ElementContainer.ScrollBarThickness = 3;
ElementContainer.ScrollBarImageColor3 = SafeModule.Theme.Default.ElementStroke;
ElementContainer.Parent = Main;

local UIListLayout = Instance.new("UIListLayout");
UIListLayout.Parent = ElementContainer;
UIListLayout.Padding = UDim.new(0, 8);
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder;

-- // Core Functions \\ --
local function MakeDraggable(frame, dragFrame)
	local dragToggle, dragInput, dragStart, startPos;
	local dragSpeed = DRAG_SPEED;
	local function updateInput(input)
		local delta = input.Position - dragStart;
		local position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X,
			startPos.Y.Scale, startPos.Y.Offset + delta.Y);
		game:GetService('TweenService'):Create(frame, TweenInfo.new(dragSpeed), {Position = position}):Play();
	end;

	dragFrame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragToggle = true;
			dragStart = input.Position;
			startPos = frame.Position;
			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragToggle = false;
				end;
			end);
		end;
	end);

	dragFrame.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input;
		end;
	end);

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragToggle then
			updateInput(input);
		end;
	end);
end;

function SafeModule:CreateCommand(name, description, callback)
	assert(type(name) == "string", "Command name must be a string");
	assert(type(description) == "string", "Command description must be a string");
	assert(type(callback) == "function", "Command callback must be a function");

	self._commands[name:lower()] = {
		Name = name,
		Description = description,
		Callback = callback
	};

	return self._commands[name:lower()];
end;

function SafeModule:CreateKeySystem(key, callback)
	KeySystem.Visible = true;

	-- Add fade in animation
	KeySystem.BackgroundTransparency = 1;
	KeyInput.BackgroundTransparency = 1;
	KeyInput.TextTransparency = 1;
	SubmitButton.BackgroundTransparency = 1;
	SubmitButton.TextTransparency = 1;
	KeyTitle.TextTransparency = 1;

	TweenService:Create(KeySystem, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 0}):Play();
	TweenService:Create(KeyInput, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 0, TextTransparency = 0}):Play();
	TweenService:Create(SubmitButton, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 0, TextTransparency = 0}):Play();
	TweenService:Create(KeyTitle, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 0}):Play();

	SubmitButton.MouseEnter:Connect(function()
		TweenService:Create(SubmitButton, TWEEN_INFO, {BackgroundColor3 = SafeModule.Theme.Default.ButtonHover}):Play();
		TweenService:Create(SubmitGlow, TWEEN_INFO, {ImageTransparency = 1 - GLOW_INTENSITY}):Play();
	end);

	SubmitButton.MouseLeave:Connect(function()
		TweenService:Create(SubmitButton, TWEEN_INFO, {BackgroundColor3 = SafeModule.Theme.Default.ButtonColor}):Play();
		TweenService:Create(SubmitGlow, TWEEN_INFO, {ImageTransparency = 1}):Play();
	end);

	SubmitButton.MouseButton1Click:Connect(function()
		if KeyInput.Text == key then
			self._keySystemPassed = true;

			-- Add fade out animation for key system
			TweenService:Create(KeySystem, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 1}):Play();
			TweenService:Create(KeyInput, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 1, TextTransparency = 1}):Play();
			TweenService:Create(SubmitButton, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 1, TextTransparency = 1}):Play();
			TweenService:Create(KeyTitle, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 1}):Play();

			wait(ANIMATION_SPEED);
			KeySystem.Visible = false;

			-- Add fade in animation for main window
			Main.BackgroundTransparency = 1;
			TopBar.BackgroundTransparency = 1;
			Title.TextTransparency = 1;
			Subtitle.TextTransparency = 1;
			Main.Visible = true;

			TweenService:Create(Main, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 0}):Play();
			TweenService:Create(TopBar, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 0}):Play();
			TweenService:Create(Title, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 0}):Play();
			TweenService:Create(Subtitle, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 0}):Play();

			if callback then callback(true); end;
		else
			TweenService:Create(KeyInput, TweenInfo.new(0.1), {Position = UDim2.new(0.1, -5, 0.3, 0)}):Play();
			wait(0.1);
			TweenService:Create(KeyInput, TweenInfo.new(0.1), {Position = UDim2.new(0.1, 5, 0.3, 0)}):Play();
			wait(0.1);
			TweenService:Create(KeyInput, TweenInfo.new(0.1), {Position = UDim2.new(0.1, 0, 0.3, 0)}):Play();
			if callback then callback(false); end;
		end;
	end);
end;

function SafeModule:Init()
	if self._initialized then return; end;

	MakeDraggable(Main, TopBar);
	MakeDraggable(KeySystem, KeySystem);

	CloseButton.MouseEnter:Connect(function()
		TweenService:Create(CloseButton, TWEEN_INFO, {Size = UDim2.new(0, 14, 0, 14), Position = UDim2.new(0, 9, 0, 8)}):Play();
	end);

	CloseButton.MouseLeave:Connect(function()
		TweenService:Create(CloseButton, TWEEN_INFO, {Size = UDim2.new(0, 12, 0, 12), Position = UDim2.new(0, 10, 0, 9)}):Play();
	end);

	MinimizeButton.MouseEnter:Connect(function()
		TweenService:Create(MinimizeButton, TWEEN_INFO, {Size = UDim2.new(0, 14, 0, 14), Position = UDim2.new(0, 29, 0, 8)}):Play();
	end);

	MinimizeButton.MouseLeave:Connect(function()
		TweenService:Create(MinimizeButton, TWEEN_INFO, {Size = UDim2.new(0, 12, 0, 12), Position = UDim2.new(0, 30, 0, 9)}):Play();
	end);

	MaximizeButton.MouseEnter:Connect(function()
		TweenService:Create(MaximizeButton, TWEEN_INFO, {Size = UDim2.new(0, 14, 0, 14), Position = UDim2.new(0, 49, 0, 8)}):Play();
	end);

	MaximizeButton.MouseLeave:Connect(function()
		TweenService:Create(MaximizeButton, TWEEN_INFO, {Size = UDim2.new(0, 12, 0, 12), Position = UDim2.new(0, 50, 0, 9)}):Play();
	end);

	CloseButton.MouseButton1Click:Connect(function()
		-- Add fade out animation
		TweenService:Create(Main, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 1}):Play();
		TweenService:Create(TopBar, TweenInfo.new(ANIMATION_SPEED), {BackgroundTransparency = 1}):Play();
		TweenService:Create(Title, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 1}):Play();
		TweenService:Create(Subtitle, TweenInfo.new(ANIMATION_SPEED), {TextTransparency = 1}):Play();

		wait(ANIMATION_SPEED);
		Interface:Destroy();
	end);

	local minimized = false;
	MinimizeButton.MouseButton1Click:Connect(function()
		minimized = not minimized;
		TweenService:Create(Main, TWEEN_INFO, {Size = minimized and UDim2.new(0, 450, 0, 30) or UDim2.new(0, 450, 0, 350)}):Play();
	end);

	local maximized = false;
	MaximizeButton.MouseButton1Click:Connect(function()
		maximized = not maximized;
		TweenService:Create(Main, TWEEN_INFO, {
			Size = maximized and UDim2.new(0, 700, 0, 500) or UDim2.new(0, 450, 0, 350),
			Position = maximized and UDim2.new(0.5, -350, 0.5, -250) or UDim2.new(0.5, -225, 0.5, -175)
		}):Play();
	end);

	-- Add theme switcher
	function SafeModule:SetTheme(themeName)
		if self.Theme[themeName] then
			self._currentTheme = themeName;
			local theme = self.Theme[themeName];

			-- Update all UI elements with new theme colors
			Main.BackgroundColor3 = theme.Background;
			TopBar.BackgroundColor3 = theme.ElementBackground;
			Title.TextColor3 = theme.TextColor;
			Subtitle.TextColor3 = theme.Accent;
			ElementContainer.ScrollBarImageColor3 = theme.ElementStroke;

			-- Update all buttons, toggles, etc.
			for _, element in ipairs(ElementContainer:GetChildren()) do
				if element:IsA("TextButton") then
					if element.Name == "Toggle" then
						element.BackgroundColor3 = theme.ElementBackground;
						element.TextColor3 = theme.TextColor;
						local indicator = element:FindFirstChild("ToggleIndicator");
						if indicator then
							indicator.BackgroundColor3 = indicator.BackgroundColor3 == self.Theme.Default.ToggleOn and theme.ToggleOn or theme.ToggleOff;
						end;
					else
						element.BackgroundColor3 = theme.ButtonColor;
					end;
				end;
			end;
		end;
	end;

	self._initialized = true;
end;

function SafeModule:CreateWindow(WindowConfig)
	WindowConfig = WindowConfig or {};

	local Window = {};

	function Window:CreateButton(ButtonConfig)
		ButtonConfig = ButtonConfig or {};

		local Button = Instance.new("TextButton");
		Button.Size = UDim2.new(1, 0, 0, 35);
		Button.BackgroundColor3 = SafeModule.Theme[SafeModule._currentTheme].ButtonColor;
		Button.TextColor3 = Color3.fromRGB(255, 255, 255);
		Button.Text = ButtonConfig.Name or "Button";
		Button.TextSize = 14;
		Button.Font = Enum.Font.GothamBold;
		Button.Parent = ElementContainer;
		Button.AutoButtonColor = false;

		local UICorner = Instance.new("UICorner");
		UICorner.CornerRadius = UDim.new(0, 6);
		UICorner.Parent = Button;

		-- Add glow effect
		local ButtonGlow = Instance.new("ImageLabel");
		ButtonGlow.Name = "Glow";
		ButtonGlow.BackgroundTransparency = 1;
		ButtonGlow.Position = UDim2.new(0, -15, 0, -15);
		ButtonGlow.Size = UDim2.new(1, 30, 1, 30);
		ButtonGlow.ZIndex = -1;
		ButtonGlow.Image = "rbxassetid://5554236805";
		ButtonGlow.ImageColor3 = SafeModule.Theme[SafeModule._currentTheme].Glow;
		ButtonGlow.ImageTransparency = 1;
		ButtonGlow.Parent = Button;

		Button.MouseEnter:Connect(function()
			TweenService:Create(Button, TWEEN_INFO, {BackgroundColor3 = SafeModule.Theme[SafeModule._currentTheme].ButtonHover}):Play();
			TweenService:Create(ButtonGlow, TWEEN_INFO, {ImageTransparency = 1 - GLOW_INTENSITY}):Play();
		end);

		Button.MouseLeave:Connect(function()
			TweenService:Create(Button, TWEEN_INFO, {BackgroundColor3 = SafeModule.Theme[SafeModule._currentTheme].ButtonColor}):Play();
			TweenService:Create(ButtonGlow, TWEEN_INFO, {ImageTransparency = 1}):Play();
		end);

		Button.MouseButton1Click:Connect(function()
			TweenService:Create(Button, TweenInfo.new(0.1), {Size = UDim2.new(1, -5, 0, 35)}):Play();
			wait(0.1);
			TweenService:Create(Button, TweenInfo.new(0.1), {Size = UDim2.new(1, 0, 0, 35)}):Play();

			if typeof(ButtonConfig.Callback) == "function" then
				ButtonConfig.Callback();
			end;
		end);

		return Button;
	end;

	function Window:CreateToggle(ToggleConfig)
		ToggleConfig = ToggleConfig or {};

		local Enabled = ToggleConfig.Default or false;

		local Toggle = Instance.new("TextButton");
		Toggle.Name = "Toggle";
		Toggle.Size = UDim2.new(1, 0, 0, 35);
		Toggle.BackgroundColor3 = SafeModule.Theme[SafeModule._currentTheme].ElementBackground;
		Toggle.TextColor3 = SafeModule.Theme[SafeModule._currentTheme].TextColor;
		Toggle.Text = ToggleConfig.Name or "Toggle";
		Toggle.TextSize = 14;
		Toggle.Font = Enum.Font.GothamBold;
		Toggle.Parent = ElementContainer;
		Toggle.AutoButtonColor = false;

		local UICorner = Instance.new("UICorner");
		UICorner.CornerRadius = UDim.new(0, 6);
		UICorner.Parent = Toggle;

		local ToggleIndicator = Instance.new("Frame");
		ToggleIndicator.Name = "ToggleIndicator";
		ToggleIndicator.Size = UDim2.new(0, 40, 0, 20);
		ToggleIndicator.Position = UDim2.new(1, -50, 0.5, -10);
		ToggleIndicator.BackgroundColor3 = Enabled and SafeModule.Theme.Default.ToggleOn or SafeModule.Theme.Default.ToggleOff;
		ToggleIndicator.Parent = Toggle;

		local UICornerIndicator = Instance.new("UICorner");
		UICornerIndicator.CornerRadius = UDim.new(1, 0);
		UICornerIndicator.Parent = ToggleIndicator;

		local Knob = Instance.new("Frame");
		Knob.Size = UDim2.new(0, 16, 0, 16);
		Knob.Position = UDim2.new(Enabled and 1 or 0, Enabled and -18 or 2, 0.5, -8);
		Knob.BackgroundColor3 = Color3.fromRGB(255, 255, 255);
		Knob.Parent = ToggleIndicator;

		local UICornerKnob = Instance.new("UICorner");
		UICornerKnob.CornerRadius = UDim.new(1, 0);
		UICornerKnob.Parent = Knob;

		Toggle.MouseButton1Click:Connect(function()
			Enabled = not Enabled;
			TweenService:Create(ToggleIndicator, TWEEN_INFO, {
				BackgroundColor3 = Enabled and SafeModule.Theme.Default.ToggleOn or SafeModule.Theme.Default.ToggleOff
			}):Play();
			TweenService:Create(Knob, TWEEN_INFO, {
				Position = UDim2.new(Enabled and 1 or 0, Enabled and -18 or 2, 0.5, -8)
			}):Play();

			if typeof(ToggleConfig.Callback) == "function" then
				ToggleConfig.Callback(Enabled);
			end;
		end);

		return Toggle;
	end;

	return Window;
end;

-- // Safe Interface Setup \\ --
if RunService:IsStudio() then
	Interface.Parent = Players.LocalPlayer:WaitForChild("PlayerGui");
else
	Interface.Parent = game:GetService("CoreGui");
end;

SafeModule:Init();

return SafeModule;
